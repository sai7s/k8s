==================================================================
Kubernetes on AWS using Kops (kops little faster so go with that)
==================================================================

1. Launch Linux EC2 instance in AWS (Kubernetes Client)

create jump server first (create an ec2 t2.micro with amazon linux), name that as for ex: kopsserver 
connect to kopsserver via gitbasah CLI

2. Create and attach IAM role to EC2 Instance.
Kops need permissions to access
	S3
	EC2
	VPC
	Route53
	Autoscaling
	etc..

kops need IAM to set up master and slaves on behalf of us so we need to give permissions that is IAM

navigatoins to create IAM on aws console
IAM--> roles--> create role--> aws services (allow)--> EC2--> next--> search admin (administrator access)--> next-->
give role name project_name--> create role-->go to ec2 instance attach created role--> go to actions--> security-->modify
IAM role--> attach project_role--> update IAM role

3. Install Kops on EC2
curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops

4. Install kubectl
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

5. Create S3 bucket in AWS
S3 bucket is used by kubernetes to persist cluster state, lets create s3 bucket using aws cli Note: Make sure you choose 
bucket name that is uniqe accross all aws accounts

aws s3 mb s3://saidevops.in.k8s --region ap-south-1

6. Create private hosted zone in AWS Route53

route53 navigation on aws console

route53--> hosted zone (lefthand corner)--> create hosted zone (for ex: saidevops.in)--> select private hosted zone (go daddy,host 
papa for public ip and we need to buy them also)--> region--> vpc default-->ceate hosted zone

7 Configure environment variables.
Open .bashrc file

	vi ~/.bashrc
Add following content into .bashrc, you can choose any arbitary name for cluster and make sure buck name matches the 
one you created in previous step.

export KOPS_CLUSTER_NAME=saidevops.in
export KOPS_STATE_STORE=s3://saidevops.in.k8s

Then running command to reflect variableys added to .bashrc

	source ~/.bashrc

8. Create ssh key pair
This keypair is used for ssh into kubernetes cluster

ssh-keygen

9. Create a Kubernetes cluster definition.
kops create cluster \
--state=${KOPS_STATE_STORE} \
--node-count=2 \
--master-size=t3.medium \
--node-size=t3.medium \
--zones=us-east-1b \ # here after 1 any letter a or b is mandatory, based on availability it creates
--name=${KOPS_CLUSTER_NAME} \
--dns private \
--master-count 1

10. Create kubernetes cluster
kops update cluster --yes --admin
Above command may take some time to create the required infrastructure resources on AWS. Execute the validate command 
to check its status and wait until the cluster becomes ready

kops validate cluster

For the above above command, you might see validation failed error initially when you create cluster and it is expected 
behaviour, you have to wait for some more time and check again.

To destroy the kubernetes cluster
kops delete cluster  --yes
